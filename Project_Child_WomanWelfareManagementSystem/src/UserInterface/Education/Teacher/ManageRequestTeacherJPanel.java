/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Education.Teacher;

import Business.EcoSystem;
import Business.Enterprise.EducationEnterprise;
import Business.Logger;
import Business.Organization.EducationDistributorOrganization;
import Business.Organization.EducationSupervisorOrganization;
import Business.Organization.EducationTeacherOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DistributorWorkRequest;
import Business.WorkQueue.TeacherWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author souma
 */
public class ManageRequestTeacherJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageRequestTeacherJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private EducationEnterprise enterprise;
    private EcoSystem system;
    private Organization organization;
    public ManageRequestTeacherJPanel(JPanel userProcessContainer, EcoSystem system, EducationEnterprise enterprise, UserAccount account,Organization organization) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.userAccount=account;
        this.enterprise=enterprise;
        this.system=system;
        this.organization=organization;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblManageRequestTeacher = new javax.swing.JTable();
        btnAssignToMe = new javax.swing.JButton();
        btnProceed = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 102, 102));

        tblManageRequestTeacher.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Status", "Receiver", "Result"
            }
        ));
        jScrollPane2.setViewportView(tblManageRequestTeacher);

        btnAssignToMe.setText("Assign to Me");
        btnAssignToMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignToMeActionPerformed(evt);
            }
        });

        btnProceed.setText("Proceed");
        btnProceed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProceedActionPerformed(evt);
            }
        });

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Teacher Manage Request Panel");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAssignToMe)
                        .addGap(288, 288, 288)
                        .addComponent(btnProceed))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(165, 165, 165))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(255, 255, 255))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssignToMe)
                    .addComponent(btnProceed))
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addGap(290, 290, 290))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignToMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignToMeActionPerformed
        // TODO add your handling code here:
         try
        {
        int selectedRow = tblManageRequestTeacher.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        boolean flag = true;
        EducationTeacherOrganization org=(EducationTeacherOrganization) organization;
         for(WorkRequest workRequest : org.getWorkQueue().getWorkRequestList()){
                if(workRequest.getReceiver()==userAccount && !workRequest.getStatus().equalsIgnoreCase("completed")){
                    flag = false;
                    break;
                }
            } 
         
        WorkRequest request = (WorkRequest)tblManageRequestTeacher.getValueAt(selectedRow, 0);
        if(flag){
                if(!request.getStatus().equalsIgnoreCase("completed")){
                    if(!request.getStatus().equalsIgnoreCase("Pending") && request.getReceiver()== null){
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        populateTable();
        JOptionPane.showMessageDialog(null, "Request Assigned");
        Logger.getInstance().writeLogs("RequestAssigned");
        }
                    else{
                    JOptionPane.showMessageDialog(null, "Someone else is working on this request");
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "This request is completed. Select some other request");
                }

            }
            else{
                JOptionPane.showMessageDialog(null, "You have assigned task. Please complete before taking another");
            }       
                    
         }         
         catch(Exception ex){
            Logger.getInstance().exceptionLogs(ex);
        }
    }//GEN-LAST:event_btnAssignToMeActionPerformed

    private void btnProceedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProceedActionPerformed
        // TODO add your handling code here:
        try
        {
        int selectedRow = tblManageRequestTeacher.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        TeacherWorkRequest request = (TeacherWorkRequest)tblManageRequestTeacher.getValueAt(selectedRow, 0);
        if(request.getReceiver()==(userAccount)){
        request.setStatus("Processing");
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("TeacherReqProcessPanel", new TeacherReqProcessPanel(userProcessContainer, system, enterprise, userAccount,organization,request));
        layout.next(userProcessContainer);
        }
        else
        {
             JOptionPane.showMessageDialog(null, "This request is not assigned to you. Assign it to you before proceeding");
        }
        
        }
        catch(Exception ex){
         Logger.getInstance().exceptionLogs(ex);
        }
        
    }//GEN-LAST:event_btnProceedActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

     public void populateTable(){
         try
         {
          
        DefaultTableModel model = (DefaultTableModel)tblManageRequestTeacher.getModel();
        
        model.setRowCount(0);
        EducationTeacherOrganization eduTeacherOrg=(EducationTeacherOrganization) organization;
        for(WorkRequest request : eduTeacherOrg.getWorkQueue().getWorkRequestList()){
          // eduTeacherOrg.getWorkQueue().remove(request);
          Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getName();
            row[2] = request.getStatus();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            String result=((TeacherWorkRequest)request).getResult();
            row[4]= result == null ? "Waiting" : result;
            model.addRow(row);   
            
           
        }
         }
         
        catch(Exception ex){
         Logger.getInstance().exceptionLogs(ex);
        } 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignToMe;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnProceed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblManageRequestTeacher;
    // End of variables declaration//GEN-END:variables
}
