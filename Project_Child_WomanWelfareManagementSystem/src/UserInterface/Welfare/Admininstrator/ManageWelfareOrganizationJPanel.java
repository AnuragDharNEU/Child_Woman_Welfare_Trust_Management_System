/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Welfare.Admininstrator;

import Business.EcoSystem;
import Business.Enterprise.WelfareEnterprise;
import Business.Logger;
import Business.Network.Network;
import Business.Organization.WelfareOrganization;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class ManageWelfareOrganizationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageWelfareOrganizationJPanel
     */
    private JPanel container;
    private EcoSystem ecosystem;
    private WelfareEnterprise enterprise;
    public ManageWelfareOrganizationJPanel(JPanel container, EcoSystem ecosystem,WelfareEnterprise enterprise) {
        initComponents();
        this.ecosystem = ecosystem;
        this.container = container;
        this.enterprise =  enterprise;
        populateTable();
        populateCombo();
    }
    public void populateTable(){
        try{
            DefaultTableModel model = (DefaultTableModel) tblOrganization.getModel();
            model.setRowCount(0);
            for(WelfareOrganization organization : enterprise.getWelfareOrganizationDirectory().getWelfareOrganizationList()){
                Object[] row = new Object[2];
                row[0] = organization.getOrganizationID();
                row[1] = organization.getName();
                if(!organization.getName().equals("Admin Organization"))
                model.addRow(row);
            }
        }
        catch(Exception ex){
            Logger.getInstance().exceptionLogs(ex);
        }
    }
    private void populateCombo(){
        try{
            ddlOrgType.removeAllItems();
            for (WelfareOrganization.Type type : WelfareOrganization.Type.values()){
                if (!type.getValue().equals(WelfareOrganization.Type.Admin.getValue()))
                    ddlOrgType.addItem(type);
            }
        }
        catch(Exception ex){
            Logger.getInstance().exceptionLogs(ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrganization = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        ddlOrgType = new javax.swing.JComboBox();
        btnBack = new javax.swing.JButton();
        bbtnAdd = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 102, 102));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Manage Welfare Organization");

        tblOrganization.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Organization ID", "Organization Namel"
            }
        ));
        jScrollPane1.setViewportView(tblOrganization);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Organization Type");

        ddlOrgType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        bbtnAdd.setText("Add Organization");
        bbtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbtnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(btnBack))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(ddlOrgType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bbtnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ddlOrgType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(bbtnAdd))
                .addGap(75, 75, 75))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bbtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbtnAddActionPerformed
        boolean flag = true;
        try{
            String type = ddlOrgType.getSelectedItem().toString()== "DLO"? "District Level Organization":
                          ddlOrgType.getSelectedItem().toString()== "BLO"? "Block Level Organization":
                          ddlOrgType.getSelectedItem().toString()== "SLO"? "Sector Level Organization":
                          ddlOrgType.getSelectedItem().toString()== "FLO"? "Field Level Organization": "Admin";
//             for(Network net : ecosystem.getNetworkList()){
//                for(WelfareEnterprise ent : net.getEnterpriseDirectory().getWelfareEnterpriseList()){
                    for(WelfareOrganization welOrg : enterprise.getWelfareOrganizationDirectory().getWelfareOrganizationList()){
                        if(welOrg.getName().equals(type)){
                            flag = false;
                        }
                    }
                    if(flag){
                    WelfareOrganization wel = enterprise.getWelfareOrganizationDirectory().createWelfareOrganization(type);
                    wel.setName(type);
                    populateTable();
                    Logger.getInstance().writeLogs(type+" created");
                    JOptionPane.showMessageDialog(null, type+" created");
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Organization already added. Try adding some other organization","Error",JOptionPane.ERROR_MESSAGE);
                    }
//                }
//            }
        }
        catch(Exception ex){
            Logger.getInstance().exceptionLogs(ex);
        }
    }//GEN-LAST:event_bbtnAddActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        container.remove(this);
        CardLayout layout=(CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bbtnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox ddlOrgType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblOrganization;
    // End of variables declaration//GEN-END:variables
}
